from paramiko.common import DEBUG as DEBUG, max_byte as max_byte, xffffffff as xffffffff, zero_byte as zero_byte
from paramiko.config import SSHConfig as SSHConfig
from paramiko.py3compat import PY2 as PY2, b as b, byte_chr as byte_chr, byte_ord as byte_ord, long as long
from typing import Any

def inflate_long(s: Any, always_positive: bool = ...): ...

deflate_zero: Any
deflate_ff: Any

def deflate_long(n: Any, add_sign_padding: bool = ...): ...
def format_binary(data: Any, prefix: str = ...): ...
def format_binary_line(data: Any): ...
def safe_string(s: Any): ...
def bit_length(n: Any): ...
def tb_strings(): ...
def generate_key_bytes(hash_alg: Any, salt: Any, key: Any, nbytes: Any): ...
def load_host_keys(filename: Any): ...
def parse_ssh_config(file_obj: Any): ...
def lookup_ssh_host_config(hostname: Any, config: Any): ...
def mod_inverse(x: Any, m: Any): ...
def get_thread_id(): ...
def log_to_file(filename: Any, level: Any = ...) -> None: ...

class PFilter:
    def filter(self, record: Any): ...

def get_logger(name: Any): ...
def retry_on_signal(function: Any): ...
def constant_time_bytes_eq(a: Any, b: Any): ...

class ClosingContextManager:
    def __enter__(self): ...
    def __exit__(self, type: Any, value: Any, traceback: Any) -> None: ...

def clamp_value(minimum: Any, val: Any, maximum: Any): ...
