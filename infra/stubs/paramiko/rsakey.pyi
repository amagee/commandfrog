from paramiko.message import Message as Message
from paramiko.pkey import PKey as PKey
from paramiko.py3compat import PY2 as PY2
from paramiko.ssh_exception import SSHException as SSHException
from typing import Any, Optional

class RSAKey(PKey):
    key: Any = ...
    public_blob: Any = ...
    def __init__(self, msg: Optional[Any] = ..., data: Optional[Any] = ..., filename: Optional[Any] = ..., password: Optional[Any] = ..., key: Optional[Any] = ..., file_obj: Optional[Any] = ...) -> None: ...
    @property
    def size(self): ...
    @property
    def public_numbers(self): ...
    def asbytes(self): ...
    def __hash__(self) -> Any: ...
    def get_name(self): ...
    def get_bits(self): ...
    def can_sign(self): ...
    def sign_ssh_data(self, data: Any): ...
    def verify_ssh_sig(self, data: Any, msg: Any): ...
    def write_private_key_file(self, filename: Any, password: Optional[Any] = ...) -> None: ...
    def write_private_key(self, file_obj: Any, password: Optional[Any] = ...) -> None: ...
    @staticmethod
    def generate(bits: Any, progress_func: Optional[Any] = ...): ...
