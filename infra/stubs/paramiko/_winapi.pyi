import ctypes.wintypes
from paramiko.py3compat import builtins as builtins, u as u
from typing import Any, Optional

def format_system_message(errno: Any): ...

class WindowsError(builtins.WindowsError):
    def __init__(self, value: Optional[Any] = ...) -> None: ...
    @property
    def message(self): ...
    @property
    def code(self): ...

def handle_nonzero_success(result: Any) -> None: ...

GMEM_MOVEABLE: int
GlobalAlloc: Any
GlobalLock: Any
GlobalUnlock: Any
GlobalSize: Any
CreateFileMapping: Any
MapViewOfFile: Any
UnmapViewOfFile: Any
RtlMoveMemory: Any

class MemoryMap:
    name: Any = ...
    length: Any = ...
    security_attributes: Any = ...
    pos: int = ...
    def __init__(self, name: Any, length: Any, security_attributes: Optional[Any] = ...) -> None: ...
    filemap: Any = ...
    view: Any = ...
    def __enter__(self): ...
    def seek(self, pos: Any) -> None: ...
    def write(self, msg: Any) -> None: ...
    def read(self, n: Any): ...
    def __exit__(self, exc_type: Any, exc_val: Any, tb: Any) -> None: ...

READ_CONTROL: int
STANDARD_RIGHTS_REQUIRED: int
STANDARD_RIGHTS_READ = READ_CONTROL
STANDARD_RIGHTS_WRITE = READ_CONTROL
STANDARD_RIGHTS_EXECUTE = READ_CONTROL
STANDARD_RIGHTS_ALL: int
POLICY_VIEW_LOCAL_INFORMATION: int
POLICY_VIEW_AUDIT_INFORMATION: int
POLICY_GET_PRIVATE_INFORMATION: int
POLICY_TRUST_ADMIN: int
POLICY_CREATE_ACCOUNT: int
POLICY_CREATE_SECRET: int
POLICY_CREATE_PRIVILEGE: int
POLICY_SET_DEFAULT_QUOTA_LIMITS: int
POLICY_SET_AUDIT_REQUIREMENTS: int
POLICY_AUDIT_LOG_ADMIN: int
POLICY_SERVER_ADMIN: int
POLICY_LOOKUP_NAMES: int
POLICY_NOTIFICATION: int
POLICY_ALL_ACCESS: Any
POLICY_READ: Any
POLICY_WRITE: Any
POLICY_EXECUTE: Any

class TokenAccess:
    TOKEN_QUERY: int = ...

class TokenInformationClass:
    TokenUser: int = ...

class TOKEN_USER(ctypes.Structure):
    num: int = ...

class SECURITY_DESCRIPTOR(ctypes.Structure):
    SECURITY_DESCRIPTOR_CONTROL: Any = ...
    REVISION: int = ...

class SECURITY_ATTRIBUTES(ctypes.Structure):
    nLength: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    @property
    def descriptor(self): ...
    lpSecurityDescriptor: Any = ...
    @descriptor.setter
    def descriptor(self, value: Any) -> None: ...

def GetTokenInformation(token: Any, information_class: Any): ...
def OpenProcessToken(proc_handle: Any, access: Any): ...
def get_current_user(): ...
def get_security_attributes_for_user(user: Optional[Any] = ...): ...
